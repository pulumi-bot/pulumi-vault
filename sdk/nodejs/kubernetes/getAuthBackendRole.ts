// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAuthBackendRole(args: GetAuthBackendRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthBackendRoleResult> & GetAuthBackendRoleResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetAuthBackendRoleResult> = pulumi.runtime.invoke("vault:kubernetes/getAuthBackendRole:getAuthBackendRole", {
        "backend": args.backend,
        "boundCidrs": args.boundCidrs,
        "maxTtl": args.maxTtl,
        "numUses": args.numUses,
        "period": args.period,
        "policies": args.policies,
        "roleName": args.roleName,
        "tokenBoundCidrs": args.tokenBoundCidrs,
        "tokenExplicitMaxTtl": args.tokenExplicitMaxTtl,
        "tokenMaxTtl": args.tokenMaxTtl,
        "tokenNoDefaultPolicy": args.tokenNoDefaultPolicy,
        "tokenNumUses": args.tokenNumUses,
        "tokenPeriod": args.tokenPeriod,
        "tokenPolicies": args.tokenPolicies,
        "tokenTtl": args.tokenTtl,
        "tokenType": args.tokenType,
        "ttl": args.ttl,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getAuthBackendRole.
 */
export interface GetAuthBackendRoleArgs {
    readonly backend?: string;
    readonly boundCidrs?: string[];
    readonly maxTtl?: number;
    readonly numUses?: number;
    readonly period?: number;
    readonly policies?: string[];
    readonly roleName: string;
    readonly tokenBoundCidrs?: string[];
    readonly tokenExplicitMaxTtl?: number;
    readonly tokenMaxTtl?: number;
    readonly tokenNoDefaultPolicy?: boolean;
    readonly tokenNumUses?: number;
    readonly tokenPeriod?: number;
    readonly tokenPolicies?: string[];
    readonly tokenTtl?: number;
    readonly tokenType?: string;
    readonly ttl?: number;
}

/**
 * A collection of values returned by getAuthBackendRole.
 */
export interface GetAuthBackendRoleResult {
    readonly backend?: string;
    readonly boundCidrs?: string[];
    readonly boundServiceAccountNames: string[];
    readonly boundServiceAccountNamespaces: string[];
    readonly maxTtl?: number;
    readonly numUses?: number;
    readonly period?: number;
    readonly policies?: string[];
    readonly roleName: string;
    readonly tokenBoundCidrs?: string[];
    readonly tokenExplicitMaxTtl?: number;
    readonly tokenMaxTtl?: number;
    readonly tokenNoDefaultPolicy?: boolean;
    readonly tokenNumUses?: number;
    readonly tokenPeriod?: number;
    readonly tokenPolicies?: string[];
    readonly tokenTtl?: number;
    readonly tokenType?: string;
    readonly ttl?: number;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package okta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AuthBackendGroupType struct {
	// Name of the group within the Okta
	GroupName string `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
}

type AuthBackendGroupTypeInput interface {
	pulumi.Input

	ToAuthBackendGroupTypeOutput() AuthBackendGroupTypeOutput
	ToAuthBackendGroupTypeOutputWithContext(context.Context) AuthBackendGroupTypeOutput
}

type AuthBackendGroupTypeArgs struct {
	// Name of the group within the Okta
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
}

func (AuthBackendGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupType)(nil)).Elem()
}

func (i AuthBackendGroupTypeArgs) ToAuthBackendGroupTypeOutput() AuthBackendGroupTypeOutput {
	return i.ToAuthBackendGroupTypeOutputWithContext(context.Background())
}

func (i AuthBackendGroupTypeArgs) ToAuthBackendGroupTypeOutputWithContext(ctx context.Context) AuthBackendGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupTypeOutput)
}

type AuthBackendGroupTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendGroupTypeArrayOutput() AuthBackendGroupTypeArrayOutput
	ToAuthBackendGroupTypeArrayOutputWithContext(context.Context) AuthBackendGroupTypeArrayOutput
}

type AuthBackendGroupTypeArray []AuthBackendGroupTypeInput

func (AuthBackendGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupType)(nil)).Elem()
}

func (i AuthBackendGroupTypeArray) ToAuthBackendGroupTypeArrayOutput() AuthBackendGroupTypeArrayOutput {
	return i.ToAuthBackendGroupTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendGroupTypeArray) ToAuthBackendGroupTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupTypeArrayOutput)
}

type AuthBackendGroupTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupType)(nil)).Elem()
}

func (o AuthBackendGroupTypeOutput) ToAuthBackendGroupTypeOutput() AuthBackendGroupTypeOutput {
	return o
}

func (o AuthBackendGroupTypeOutput) ToAuthBackendGroupTypeOutputWithContext(ctx context.Context) AuthBackendGroupTypeOutput {
	return o
}

// Name of the group within the Okta
func (o AuthBackendGroupTypeOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendGroupType) string { return v.GroupName }).(pulumi.StringOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendGroupTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendGroupType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type AuthBackendGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupType)(nil)).Elem()
}

func (o AuthBackendGroupTypeArrayOutput) ToAuthBackendGroupTypeArrayOutput() AuthBackendGroupTypeArrayOutput {
	return o
}

func (o AuthBackendGroupTypeArrayOutput) ToAuthBackendGroupTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupTypeArrayOutput {
	return o
}

func (o AuthBackendGroupTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendGroupType {
		return vs[0].([]AuthBackendGroupType)[vs[1].(int)]
	}).(AuthBackendGroupTypeOutput)
}

type AuthBackendGroupArgsType struct {
	// Name of the group within the Okta
	GroupName string `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
}

type AuthBackendGroupArgsTypeInput interface {
	pulumi.Input

	ToAuthBackendGroupArgsTypeOutput() AuthBackendGroupArgsTypeOutput
	ToAuthBackendGroupArgsTypeOutputWithContext(context.Context) AuthBackendGroupArgsTypeOutput
}

type AuthBackendGroupArgsTypeArgs struct {
	// Name of the group within the Okta
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
}

func (AuthBackendGroupArgsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupArgsType)(nil)).Elem()
}

func (i AuthBackendGroupArgsTypeArgs) ToAuthBackendGroupArgsTypeOutput() AuthBackendGroupArgsTypeOutput {
	return i.ToAuthBackendGroupArgsTypeOutputWithContext(context.Background())
}

func (i AuthBackendGroupArgsTypeArgs) ToAuthBackendGroupArgsTypeOutputWithContext(ctx context.Context) AuthBackendGroupArgsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupArgsTypeOutput)
}

type AuthBackendGroupArgsTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendGroupArgsTypeArrayOutput() AuthBackendGroupArgsTypeArrayOutput
	ToAuthBackendGroupArgsTypeArrayOutputWithContext(context.Context) AuthBackendGroupArgsTypeArrayOutput
}

type AuthBackendGroupArgsTypeArray []AuthBackendGroupArgsTypeInput

func (AuthBackendGroupArgsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupArgsType)(nil)).Elem()
}

func (i AuthBackendGroupArgsTypeArray) ToAuthBackendGroupArgsTypeArrayOutput() AuthBackendGroupArgsTypeArrayOutput {
	return i.ToAuthBackendGroupArgsTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendGroupArgsTypeArray) ToAuthBackendGroupArgsTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupArgsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupArgsTypeArrayOutput)
}

type AuthBackendGroupArgsTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupArgsType)(nil)).Elem()
}

func (o AuthBackendGroupArgsTypeOutput) ToAuthBackendGroupArgsTypeOutput() AuthBackendGroupArgsTypeOutput {
	return o
}

func (o AuthBackendGroupArgsTypeOutput) ToAuthBackendGroupArgsTypeOutputWithContext(ctx context.Context) AuthBackendGroupArgsTypeOutput {
	return o
}

// Name of the group within the Okta
func (o AuthBackendGroupArgsTypeOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendGroupArgsType) string { return v.GroupName }).(pulumi.StringOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendGroupArgsTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendGroupArgsType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type AuthBackendGroupArgsTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupArgsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupArgsType)(nil)).Elem()
}

func (o AuthBackendGroupArgsTypeArrayOutput) ToAuthBackendGroupArgsTypeArrayOutput() AuthBackendGroupArgsTypeArrayOutput {
	return o
}

func (o AuthBackendGroupArgsTypeArrayOutput) ToAuthBackendGroupArgsTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupArgsTypeArrayOutput {
	return o
}

func (o AuthBackendGroupArgsTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendGroupArgsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendGroupArgsType {
		return vs[0].([]AuthBackendGroupArgsType)[vs[1].(int)]
	}).(AuthBackendGroupArgsTypeOutput)
}

type AuthBackendGroupStateType struct {
	// Name of the group within the Okta
	GroupName string `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
}

type AuthBackendGroupStateTypeInput interface {
	pulumi.Input

	ToAuthBackendGroupStateTypeOutput() AuthBackendGroupStateTypeOutput
	ToAuthBackendGroupStateTypeOutputWithContext(context.Context) AuthBackendGroupStateTypeOutput
}

type AuthBackendGroupStateTypeArgs struct {
	// Name of the group within the Okta
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
}

func (AuthBackendGroupStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupStateType)(nil)).Elem()
}

func (i AuthBackendGroupStateTypeArgs) ToAuthBackendGroupStateTypeOutput() AuthBackendGroupStateTypeOutput {
	return i.ToAuthBackendGroupStateTypeOutputWithContext(context.Background())
}

func (i AuthBackendGroupStateTypeArgs) ToAuthBackendGroupStateTypeOutputWithContext(ctx context.Context) AuthBackendGroupStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupStateTypeOutput)
}

type AuthBackendGroupStateTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendGroupStateTypeArrayOutput() AuthBackendGroupStateTypeArrayOutput
	ToAuthBackendGroupStateTypeArrayOutputWithContext(context.Context) AuthBackendGroupStateTypeArrayOutput
}

type AuthBackendGroupStateTypeArray []AuthBackendGroupStateTypeInput

func (AuthBackendGroupStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupStateType)(nil)).Elem()
}

func (i AuthBackendGroupStateTypeArray) ToAuthBackendGroupStateTypeArrayOutput() AuthBackendGroupStateTypeArrayOutput {
	return i.ToAuthBackendGroupStateTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendGroupStateTypeArray) ToAuthBackendGroupStateTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendGroupStateTypeArrayOutput)
}

type AuthBackendGroupStateTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendGroupStateType)(nil)).Elem()
}

func (o AuthBackendGroupStateTypeOutput) ToAuthBackendGroupStateTypeOutput() AuthBackendGroupStateTypeOutput {
	return o
}

func (o AuthBackendGroupStateTypeOutput) ToAuthBackendGroupStateTypeOutputWithContext(ctx context.Context) AuthBackendGroupStateTypeOutput {
	return o
}

// Name of the group within the Okta
func (o AuthBackendGroupStateTypeOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendGroupStateType) string { return v.GroupName }).(pulumi.StringOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendGroupStateTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendGroupStateType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type AuthBackendGroupStateTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendGroupStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendGroupStateType)(nil)).Elem()
}

func (o AuthBackendGroupStateTypeArrayOutput) ToAuthBackendGroupStateTypeArrayOutput() AuthBackendGroupStateTypeArrayOutput {
	return o
}

func (o AuthBackendGroupStateTypeArrayOutput) ToAuthBackendGroupStateTypeArrayOutputWithContext(ctx context.Context) AuthBackendGroupStateTypeArrayOutput {
	return o
}

func (o AuthBackendGroupStateTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendGroupStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendGroupStateType {
		return vs[0].([]AuthBackendGroupStateType)[vs[1].(int)]
	}).(AuthBackendGroupStateTypeOutput)
}

type AuthBackendUserType struct {
	// List of Okta groups to associate with this user
	Groups []string `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
	// Name of the user within Okta
	Username string `pulumi:"username"`
}

type AuthBackendUserTypeInput interface {
	pulumi.Input

	ToAuthBackendUserTypeOutput() AuthBackendUserTypeOutput
	ToAuthBackendUserTypeOutputWithContext(context.Context) AuthBackendUserTypeOutput
}

type AuthBackendUserTypeArgs struct {
	// List of Okta groups to associate with this user
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Name of the user within Okta
	Username pulumi.StringInput `pulumi:"username"`
}

func (AuthBackendUserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserType)(nil)).Elem()
}

func (i AuthBackendUserTypeArgs) ToAuthBackendUserTypeOutput() AuthBackendUserTypeOutput {
	return i.ToAuthBackendUserTypeOutputWithContext(context.Background())
}

func (i AuthBackendUserTypeArgs) ToAuthBackendUserTypeOutputWithContext(ctx context.Context) AuthBackendUserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserTypeOutput)
}

type AuthBackendUserTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendUserTypeArrayOutput() AuthBackendUserTypeArrayOutput
	ToAuthBackendUserTypeArrayOutputWithContext(context.Context) AuthBackendUserTypeArrayOutput
}

type AuthBackendUserTypeArray []AuthBackendUserTypeInput

func (AuthBackendUserTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserType)(nil)).Elem()
}

func (i AuthBackendUserTypeArray) ToAuthBackendUserTypeArrayOutput() AuthBackendUserTypeArrayOutput {
	return i.ToAuthBackendUserTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendUserTypeArray) ToAuthBackendUserTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserTypeArrayOutput)
}

type AuthBackendUserTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendUserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserType)(nil)).Elem()
}

func (o AuthBackendUserTypeOutput) ToAuthBackendUserTypeOutput() AuthBackendUserTypeOutput {
	return o
}

func (o AuthBackendUserTypeOutput) ToAuthBackendUserTypeOutputWithContext(ctx context.Context) AuthBackendUserTypeOutput {
	return o
}

// List of Okta groups to associate with this user
func (o AuthBackendUserTypeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserType) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendUserTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Name of the user within Okta
func (o AuthBackendUserTypeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendUserType) string { return v.Username }).(pulumi.StringOutput)
}

type AuthBackendUserTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendUserTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserType)(nil)).Elem()
}

func (o AuthBackendUserTypeArrayOutput) ToAuthBackendUserTypeArrayOutput() AuthBackendUserTypeArrayOutput {
	return o
}

func (o AuthBackendUserTypeArrayOutput) ToAuthBackendUserTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserTypeArrayOutput {
	return o
}

func (o AuthBackendUserTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendUserTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendUserType {
		return vs[0].([]AuthBackendUserType)[vs[1].(int)]
	}).(AuthBackendUserTypeOutput)
}

type AuthBackendUserArgsType struct {
	// List of Okta groups to associate with this user
	Groups []string `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
	// Name of the user within Okta
	Username string `pulumi:"username"`
}

type AuthBackendUserArgsTypeInput interface {
	pulumi.Input

	ToAuthBackendUserArgsTypeOutput() AuthBackendUserArgsTypeOutput
	ToAuthBackendUserArgsTypeOutputWithContext(context.Context) AuthBackendUserArgsTypeOutput
}

type AuthBackendUserArgsTypeArgs struct {
	// List of Okta groups to associate with this user
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Name of the user within Okta
	Username pulumi.StringInput `pulumi:"username"`
}

func (AuthBackendUserArgsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserArgsType)(nil)).Elem()
}

func (i AuthBackendUserArgsTypeArgs) ToAuthBackendUserArgsTypeOutput() AuthBackendUserArgsTypeOutput {
	return i.ToAuthBackendUserArgsTypeOutputWithContext(context.Background())
}

func (i AuthBackendUserArgsTypeArgs) ToAuthBackendUserArgsTypeOutputWithContext(ctx context.Context) AuthBackendUserArgsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserArgsTypeOutput)
}

type AuthBackendUserArgsTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendUserArgsTypeArrayOutput() AuthBackendUserArgsTypeArrayOutput
	ToAuthBackendUserArgsTypeArrayOutputWithContext(context.Context) AuthBackendUserArgsTypeArrayOutput
}

type AuthBackendUserArgsTypeArray []AuthBackendUserArgsTypeInput

func (AuthBackendUserArgsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserArgsType)(nil)).Elem()
}

func (i AuthBackendUserArgsTypeArray) ToAuthBackendUserArgsTypeArrayOutput() AuthBackendUserArgsTypeArrayOutput {
	return i.ToAuthBackendUserArgsTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendUserArgsTypeArray) ToAuthBackendUserArgsTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserArgsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserArgsTypeArrayOutput)
}

type AuthBackendUserArgsTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendUserArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserArgsType)(nil)).Elem()
}

func (o AuthBackendUserArgsTypeOutput) ToAuthBackendUserArgsTypeOutput() AuthBackendUserArgsTypeOutput {
	return o
}

func (o AuthBackendUserArgsTypeOutput) ToAuthBackendUserArgsTypeOutputWithContext(ctx context.Context) AuthBackendUserArgsTypeOutput {
	return o
}

// List of Okta groups to associate with this user
func (o AuthBackendUserArgsTypeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserArgsType) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendUserArgsTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserArgsType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Name of the user within Okta
func (o AuthBackendUserArgsTypeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendUserArgsType) string { return v.Username }).(pulumi.StringOutput)
}

type AuthBackendUserArgsTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendUserArgsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserArgsType)(nil)).Elem()
}

func (o AuthBackendUserArgsTypeArrayOutput) ToAuthBackendUserArgsTypeArrayOutput() AuthBackendUserArgsTypeArrayOutput {
	return o
}

func (o AuthBackendUserArgsTypeArrayOutput) ToAuthBackendUserArgsTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserArgsTypeArrayOutput {
	return o
}

func (o AuthBackendUserArgsTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendUserArgsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendUserArgsType {
		return vs[0].([]AuthBackendUserArgsType)[vs[1].(int)]
	}).(AuthBackendUserArgsTypeOutput)
}

type AuthBackendUserStateType struct {
	// List of Okta groups to associate with this user
	Groups []string `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies []string `pulumi:"policies"`
	// Name of the user within Okta
	Username string `pulumi:"username"`
}

type AuthBackendUserStateTypeInput interface {
	pulumi.Input

	ToAuthBackendUserStateTypeOutput() AuthBackendUserStateTypeOutput
	ToAuthBackendUserStateTypeOutputWithContext(context.Context) AuthBackendUserStateTypeOutput
}

type AuthBackendUserStateTypeArgs struct {
	// List of Okta groups to associate with this user
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// List of Vault policies to associate with this user
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Name of the user within Okta
	Username pulumi.StringInput `pulumi:"username"`
}

func (AuthBackendUserStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserStateType)(nil)).Elem()
}

func (i AuthBackendUserStateTypeArgs) ToAuthBackendUserStateTypeOutput() AuthBackendUserStateTypeOutput {
	return i.ToAuthBackendUserStateTypeOutputWithContext(context.Background())
}

func (i AuthBackendUserStateTypeArgs) ToAuthBackendUserStateTypeOutputWithContext(ctx context.Context) AuthBackendUserStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserStateTypeOutput)
}

type AuthBackendUserStateTypeArrayInput interface {
	pulumi.Input

	ToAuthBackendUserStateTypeArrayOutput() AuthBackendUserStateTypeArrayOutput
	ToAuthBackendUserStateTypeArrayOutputWithContext(context.Context) AuthBackendUserStateTypeArrayOutput
}

type AuthBackendUserStateTypeArray []AuthBackendUserStateTypeInput

func (AuthBackendUserStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserStateType)(nil)).Elem()
}

func (i AuthBackendUserStateTypeArray) ToAuthBackendUserStateTypeArrayOutput() AuthBackendUserStateTypeArrayOutput {
	return i.ToAuthBackendUserStateTypeArrayOutputWithContext(context.Background())
}

func (i AuthBackendUserStateTypeArray) ToAuthBackendUserStateTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendUserStateTypeArrayOutput)
}

type AuthBackendUserStateTypeOutput struct{ *pulumi.OutputState }

func (AuthBackendUserStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackendUserStateType)(nil)).Elem()
}

func (o AuthBackendUserStateTypeOutput) ToAuthBackendUserStateTypeOutput() AuthBackendUserStateTypeOutput {
	return o
}

func (o AuthBackendUserStateTypeOutput) ToAuthBackendUserStateTypeOutputWithContext(ctx context.Context) AuthBackendUserStateTypeOutput {
	return o
}

// List of Okta groups to associate with this user
func (o AuthBackendUserStateTypeOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserStateType) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// List of Vault policies to associate with this user
func (o AuthBackendUserStateTypeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthBackendUserStateType) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Name of the user within Okta
func (o AuthBackendUserStateTypeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AuthBackendUserStateType) string { return v.Username }).(pulumi.StringOutput)
}

type AuthBackendUserStateTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendUserStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackendUserStateType)(nil)).Elem()
}

func (o AuthBackendUserStateTypeArrayOutput) ToAuthBackendUserStateTypeArrayOutput() AuthBackendUserStateTypeArrayOutput {
	return o
}

func (o AuthBackendUserStateTypeArrayOutput) ToAuthBackendUserStateTypeArrayOutputWithContext(ctx context.Context) AuthBackendUserStateTypeArrayOutput {
	return o
}

func (o AuthBackendUserStateTypeArrayOutput) Index(i pulumi.IntInput) AuthBackendUserStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackendUserStateType {
		return vs[0].([]AuthBackendUserStateType)[vs[1].(int)]
	}).(AuthBackendUserStateTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthBackendGroupTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendGroupArgsTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendGroupArgsTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendGroupStateTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendGroupStateTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendUserTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendUserTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendUserArgsTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendUserArgsTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendUserStateTypeOutput{})
	pulumi.RegisterOutputType(AuthBackendUserStateTypeArrayOutput{})
}

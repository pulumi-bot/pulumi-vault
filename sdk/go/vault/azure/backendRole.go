// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/azure_secret_backend_role.html.markdown.
type BackendRole struct {
	s *pulumi.ResourceState
}

// NewBackendRole registers a new resource with the given unique name, arguments, and options.
func NewBackendRole(ctx *pulumi.Context,
	name string, args *BackendRoleArgs, opts ...pulumi.ResourceOpt) (*BackendRole, error) {
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["applicationObjectId"] = nil
		inputs["azureRoles"] = nil
		inputs["backend"] = nil
		inputs["description"] = nil
		inputs["maxTtl"] = nil
		inputs["role"] = nil
		inputs["ttl"] = nil
	} else {
		inputs["applicationObjectId"] = args.ApplicationObjectId
		inputs["azureRoles"] = args.AzureRoles
		inputs["backend"] = args.Backend
		inputs["description"] = args.Description
		inputs["maxTtl"] = args.MaxTtl
		inputs["role"] = args.Role
		inputs["ttl"] = args.Ttl
	}
	s, err := ctx.RegisterResource("vault:azure/backendRole:BackendRole", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackendRole{s: s}, nil
}

// GetBackendRole gets an existing BackendRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackendRole(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BackendRoleState, opts ...pulumi.ResourceOpt) (*BackendRole, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["applicationObjectId"] = state.ApplicationObjectId
		inputs["azureRoles"] = state.AzureRoles
		inputs["backend"] = state.Backend
		inputs["description"] = state.Description
		inputs["maxTtl"] = state.MaxTtl
		inputs["role"] = state.Role
		inputs["ttl"] = state.Ttl
	}
	s, err := ctx.ReadResource("vault:azure/backendRole:BackendRole", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackendRole{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *BackendRole) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *BackendRole) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Application Object ID for an existing service principal that will
// be used instead of creating dynamic service principals. If present, `azureRoles` will be ignored.
func (r *BackendRole) ApplicationObjectId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["applicationObjectId"])
}

// List of Azure roles to be assigned to the generated service principal.
func (r *BackendRole) AzureRoles() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["azureRoles"])
}

// Path to the mounted Azure auth backend
func (r *BackendRole) Backend() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backend"])
}

// Human-friendly description of the mount for the backend.
func (r *BackendRole) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// Specifies the maximum TTL for service principals generated using this role. Accepts time
// suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time.
func (r *BackendRole) MaxTtl() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["maxTtl"])
}

// Name of the Azure role
func (r *BackendRole) Role() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["role"])
}

// Specifies the default TTL for service principals generated using this role.
// Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time.
func (r *BackendRole) Ttl() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ttl"])
}

// Input properties used for looking up and filtering BackendRole resources.
type BackendRoleState struct {
	// Application Object ID for an existing service principal that will
	// be used instead of creating dynamic service principals. If present, `azureRoles` will be ignored.
	ApplicationObjectId interface{}
	// List of Azure roles to be assigned to the generated service principal.
	AzureRoles interface{}
	// Path to the mounted Azure auth backend
	Backend interface{}
	// Human-friendly description of the mount for the backend.
	Description interface{}
	// Specifies the maximum TTL for service principals generated using this role. Accepts time
	// suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time.
	MaxTtl interface{}
	// Name of the Azure role
	Role interface{}
	// Specifies the default TTL for service principals generated using this role.
	// Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time.
	Ttl interface{}
}

// The set of arguments for constructing a BackendRole resource.
type BackendRoleArgs struct {
	// Application Object ID for an existing service principal that will
	// be used instead of creating dynamic service principals. If present, `azureRoles` will be ignored.
	ApplicationObjectId interface{}
	// List of Azure roles to be assigned to the generated service principal.
	AzureRoles interface{}
	// Path to the mounted Azure auth backend
	Backend interface{}
	// Human-friendly description of the mount for the backend.
	Description interface{}
	// Specifies the maximum TTL for service principals generated using this role. Accepts time
	// suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time.
	MaxTtl interface{}
	// Name of the Azure role
	Role interface{}
	// Specifies the default TTL for service principals generated using this role.
	// Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time.
	Ttl interface{}
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BackendRoleAzureRole struct {
	RoleId   string `pulumi:"roleId"`
	RoleName string `pulumi:"roleName"`
	Scope    string `pulumi:"scope"`
}

type BackendRoleAzureRoleInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput
	ToBackendRoleAzureRoleOutputWithContext(context.Context) BackendRoleAzureRoleOutput
}

type BackendRoleAzureRoleArgs struct {
	RoleId   pulumi.StringInput `pulumi:"roleId"`
	RoleName pulumi.StringInput `pulumi:"roleName"`
	Scope    pulumi.StringInput `pulumi:"scope"`
}

func (BackendRoleAzureRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return i.ToBackendRoleAzureRoleOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArgs) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleOutput)
}

type BackendRoleAzureRoleArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput
	ToBackendRoleAzureRoleArrayOutputWithContext(context.Context) BackendRoleAzureRoleArrayOutput
}

type BackendRoleAzureRoleArray []BackendRoleAzureRoleInput

func (BackendRoleAzureRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return i.ToBackendRoleAzureRoleArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArray) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleArrayOutput)
}

type BackendRoleAzureRoleOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutput() BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) ToBackendRoleAzureRoleOutputWithContext(ctx context.Context) BackendRoleAzureRoleOutput {
	return o
}

func (o BackendRoleAzureRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o BackendRoleAzureRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o BackendRoleAzureRoleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRole) string { return v.Scope }).(pulumi.StringOutput)
}

type BackendRoleAzureRoleArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRole)(nil)).Elem()
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutput() BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) ToBackendRoleAzureRoleArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureRole {
		return vs[0].([]BackendRoleAzureRole)[vs[1].(int)]
	}).(BackendRoleAzureRoleOutput)
}

type BackendRoleAzureRoleArgs struct {
	RoleId   *string `pulumi:"roleId"`
	RoleName string  `pulumi:"roleName"`
	Scope    string  `pulumi:"scope"`
}

type BackendRoleAzureRoleArgsInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleArgsOutput() BackendRoleAzureRoleArgsOutput
	ToBackendRoleAzureRoleArgsOutputWithContext(context.Context) BackendRoleAzureRoleArgsOutput
}

type BackendRoleAzureRoleArgsArgs struct {
	RoleId   pulumi.StringPtrInput `pulumi:"roleId"`
	RoleName pulumi.StringInput    `pulumi:"roleName"`
	Scope    pulumi.StringInput    `pulumi:"scope"`
}

func (BackendRoleAzureRoleArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRoleArgs)(nil)).Elem()
}

func (i BackendRoleAzureRoleArgsArgs) ToBackendRoleAzureRoleArgsOutput() BackendRoleAzureRoleArgsOutput {
	return i.ToBackendRoleAzureRoleArgsOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArgsArgs) ToBackendRoleAzureRoleArgsOutputWithContext(ctx context.Context) BackendRoleAzureRoleArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleArgsOutput)
}

type BackendRoleAzureRoleArgsArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleArgsArrayOutput() BackendRoleAzureRoleArgsArrayOutput
	ToBackendRoleAzureRoleArgsArrayOutputWithContext(context.Context) BackendRoleAzureRoleArgsArrayOutput
}

type BackendRoleAzureRoleArgsArray []BackendRoleAzureRoleArgsInput

func (BackendRoleAzureRoleArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRoleArgs)(nil)).Elem()
}

func (i BackendRoleAzureRoleArgsArray) ToBackendRoleAzureRoleArgsArrayOutput() BackendRoleAzureRoleArgsArrayOutput {
	return i.ToBackendRoleAzureRoleArgsArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleArgsArray) ToBackendRoleAzureRoleArgsArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleArgsArrayOutput)
}

type BackendRoleAzureRoleArgsOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRoleArgs)(nil)).Elem()
}

func (o BackendRoleAzureRoleArgsOutput) ToBackendRoleAzureRoleArgsOutput() BackendRoleAzureRoleArgsOutput {
	return o
}

func (o BackendRoleAzureRoleArgsOutput) ToBackendRoleAzureRoleArgsOutputWithContext(ctx context.Context) BackendRoleAzureRoleArgsOutput {
	return o
}

func (o BackendRoleAzureRoleArgsOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleArgs) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o BackendRoleAzureRoleArgsOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleArgs) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o BackendRoleAzureRoleArgsOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleArgs) string { return v.Scope }).(pulumi.StringOutput)
}

type BackendRoleAzureRoleArgsArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRoleArgs)(nil)).Elem()
}

func (o BackendRoleAzureRoleArgsArrayOutput) ToBackendRoleAzureRoleArgsArrayOutput() BackendRoleAzureRoleArgsArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArgsArrayOutput) ToBackendRoleAzureRoleArgsArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleArgsArrayOutput {
	return o
}

func (o BackendRoleAzureRoleArgsArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureRoleArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureRoleArgs {
		return vs[0].([]BackendRoleAzureRoleArgs)[vs[1].(int)]
	}).(BackendRoleAzureRoleArgsOutput)
}

type BackendRoleAzureRoleState struct {
	RoleId   *string `pulumi:"roleId"`
	RoleName string  `pulumi:"roleName"`
	Scope    string  `pulumi:"scope"`
}

type BackendRoleAzureRoleStateInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleStateOutput() BackendRoleAzureRoleStateOutput
	ToBackendRoleAzureRoleStateOutputWithContext(context.Context) BackendRoleAzureRoleStateOutput
}

type BackendRoleAzureRoleStateArgs struct {
	RoleId   pulumi.StringPtrInput `pulumi:"roleId"`
	RoleName pulumi.StringInput    `pulumi:"roleName"`
	Scope    pulumi.StringInput    `pulumi:"scope"`
}

func (BackendRoleAzureRoleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRoleState)(nil)).Elem()
}

func (i BackendRoleAzureRoleStateArgs) ToBackendRoleAzureRoleStateOutput() BackendRoleAzureRoleStateOutput {
	return i.ToBackendRoleAzureRoleStateOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleStateArgs) ToBackendRoleAzureRoleStateOutputWithContext(ctx context.Context) BackendRoleAzureRoleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleStateOutput)
}

type BackendRoleAzureRoleStateArrayInput interface {
	pulumi.Input

	ToBackendRoleAzureRoleStateArrayOutput() BackendRoleAzureRoleStateArrayOutput
	ToBackendRoleAzureRoleStateArrayOutputWithContext(context.Context) BackendRoleAzureRoleStateArrayOutput
}

type BackendRoleAzureRoleStateArray []BackendRoleAzureRoleStateInput

func (BackendRoleAzureRoleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRoleState)(nil)).Elem()
}

func (i BackendRoleAzureRoleStateArray) ToBackendRoleAzureRoleStateArrayOutput() BackendRoleAzureRoleStateArrayOutput {
	return i.ToBackendRoleAzureRoleStateArrayOutputWithContext(context.Background())
}

func (i BackendRoleAzureRoleStateArray) ToBackendRoleAzureRoleStateArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendRoleAzureRoleStateArrayOutput)
}

type BackendRoleAzureRoleStateOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendRoleAzureRoleState)(nil)).Elem()
}

func (o BackendRoleAzureRoleStateOutput) ToBackendRoleAzureRoleStateOutput() BackendRoleAzureRoleStateOutput {
	return o
}

func (o BackendRoleAzureRoleStateOutput) ToBackendRoleAzureRoleStateOutputWithContext(ctx context.Context) BackendRoleAzureRoleStateOutput {
	return o
}

func (o BackendRoleAzureRoleStateOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleState) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o BackendRoleAzureRoleStateOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleState) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o BackendRoleAzureRoleStateOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BackendRoleAzureRoleState) string { return v.Scope }).(pulumi.StringOutput)
}

type BackendRoleAzureRoleStateArrayOutput struct{ *pulumi.OutputState }

func (BackendRoleAzureRoleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendRoleAzureRoleState)(nil)).Elem()
}

func (o BackendRoleAzureRoleStateArrayOutput) ToBackendRoleAzureRoleStateArrayOutput() BackendRoleAzureRoleStateArrayOutput {
	return o
}

func (o BackendRoleAzureRoleStateArrayOutput) ToBackendRoleAzureRoleStateArrayOutputWithContext(ctx context.Context) BackendRoleAzureRoleStateArrayOutput {
	return o
}

func (o BackendRoleAzureRoleStateArrayOutput) Index(i pulumi.IntInput) BackendRoleAzureRoleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendRoleAzureRoleState {
		return vs[0].([]BackendRoleAzureRoleState)[vs[1].(int)]
	}).(BackendRoleAzureRoleStateOutput)
}

func init() {
	pulumi.RegisterOutputType(BackendRoleAzureRoleOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleArrayOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleArgsOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleArgsArrayOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleStateOutput{})
	pulumi.RegisterOutputType(BackendRoleAzureRoleStateArrayOutput{})
}

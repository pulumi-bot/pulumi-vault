// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/azure_secret_backend.html.markdown.
type Backend struct {
	s *pulumi.ResourceState
}

// NewBackend registers a new resource with the given unique name, arguments, and options.
func NewBackend(ctx *pulumi.Context,
	name string, args *BackendArgs, opts ...pulumi.ResourceOpt) (*Backend, error) {
	if args == nil || args.SubscriptionId == nil {
		return nil, errors.New("missing required argument 'SubscriptionId'")
	}
	if args == nil || args.TenantId == nil {
		return nil, errors.New("missing required argument 'TenantId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clientId"] = nil
		inputs["clientSecret"] = nil
		inputs["description"] = nil
		inputs["environment"] = nil
		inputs["path"] = nil
		inputs["subscriptionId"] = nil
		inputs["tenantId"] = nil
	} else {
		inputs["clientId"] = args.ClientId
		inputs["clientSecret"] = args.ClientSecret
		inputs["description"] = args.Description
		inputs["environment"] = args.Environment
		inputs["path"] = args.Path
		inputs["subscriptionId"] = args.SubscriptionId
		inputs["tenantId"] = args.TenantId
	}
	s, err := ctx.RegisterResource("vault:azure/backend:Backend", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Backend{s: s}, nil
}

// GetBackend gets an existing Backend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackend(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BackendState, opts ...pulumi.ResourceOpt) (*Backend, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clientId"] = state.ClientId
		inputs["clientSecret"] = state.ClientSecret
		inputs["description"] = state.Description
		inputs["environment"] = state.Environment
		inputs["path"] = state.Path
		inputs["subscriptionId"] = state.SubscriptionId
		inputs["tenantId"] = state.TenantId
	}
	s, err := ctx.ReadResource("vault:azure/backend:Backend", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Backend{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Backend) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Backend) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are
// required.
func (r *Backend) ClientId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientId"])
}

// The client secret for credentials to query the Azure APIs
func (r *Backend) ClientSecret() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientSecret"])
}

// Human-friendly description of the mount for the backend.
func (r *Backend) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.
func (r *Backend) Environment() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["environment"])
}

// Path to mount the backend at.
func (r *Backend) Path() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["path"])
}

// The subscription id for the Azure Active Directory.
func (r *Backend) SubscriptionId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["subscriptionId"])
}

// The tenant id for the Azure Active Directory organization.
func (r *Backend) TenantId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["tenantId"])
}

// Input properties used for looking up and filtering Backend resources.
type BackendState struct {
	// The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are
	// required.
	ClientId interface{}
	// The client secret for credentials to query the Azure APIs
	ClientSecret interface{}
	// Human-friendly description of the mount for the backend.
	Description interface{}
	// The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.
	Environment interface{}
	// Path to mount the backend at.
	Path interface{}
	// The subscription id for the Azure Active Directory.
	SubscriptionId interface{}
	// The tenant id for the Azure Active Directory organization.
	TenantId interface{}
}

// The set of arguments for constructing a Backend resource.
type BackendArgs struct {
	// The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are
	// required.
	ClientId interface{}
	// The client secret for credentials to query the Azure APIs
	ClientSecret interface{}
	// Human-friendly description of the mount for the backend.
	Description interface{}
	// The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.
	Environment interface{}
	// Path to mount the backend at.
	Path interface{}
	// The subscription id for the Azure Active Directory.
	SubscriptionId interface{}
	// The tenant id for the Azure Active Directory organization.
	TenantId interface{}
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Reads role tag information from an AWS auth backend in Vault. 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/aws_auth_backend_role_tag.html.markdown.
type AuthBackendRoleTag struct {
	s *pulumi.ResourceState
}

// NewAuthBackendRoleTag registers a new resource with the given unique name, arguments, and options.
func NewAuthBackendRoleTag(ctx *pulumi.Context,
	name string, args *AuthBackendRoleTagArgs, opts ...pulumi.ResourceOpt) (*AuthBackendRoleTag, error) {
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allowInstanceMigration"] = nil
		inputs["backend"] = nil
		inputs["disallowReauthentication"] = nil
		inputs["instanceId"] = nil
		inputs["maxTtl"] = nil
		inputs["policies"] = nil
		inputs["role"] = nil
	} else {
		inputs["allowInstanceMigration"] = args.AllowInstanceMigration
		inputs["backend"] = args.Backend
		inputs["disallowReauthentication"] = args.DisallowReauthentication
		inputs["instanceId"] = args.InstanceId
		inputs["maxTtl"] = args.MaxTtl
		inputs["policies"] = args.Policies
		inputs["role"] = args.Role
	}
	inputs["tagKey"] = nil
	inputs["tagValue"] = nil
	s, err := ctx.RegisterResource("vault:aws/authBackendRoleTag:AuthBackendRoleTag", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AuthBackendRoleTag{s: s}, nil
}

// GetAuthBackendRoleTag gets an existing AuthBackendRoleTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthBackendRoleTag(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AuthBackendRoleTagState, opts ...pulumi.ResourceOpt) (*AuthBackendRoleTag, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["allowInstanceMigration"] = state.AllowInstanceMigration
		inputs["backend"] = state.Backend
		inputs["disallowReauthentication"] = state.DisallowReauthentication
		inputs["instanceId"] = state.InstanceId
		inputs["maxTtl"] = state.MaxTtl
		inputs["policies"] = state.Policies
		inputs["role"] = state.Role
		inputs["tagKey"] = state.TagKey
		inputs["tagValue"] = state.TagValue
	}
	s, err := ctx.ReadResource("vault:aws/authBackendRoleTag:AuthBackendRoleTag", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AuthBackendRoleTag{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AuthBackendRoleTag) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AuthBackendRoleTag) ID() pulumi.IDOutput {
	return r.s.ID()
}

// If set, allows migration of the underlying instances where the client resides. Use with caution.
func (r *AuthBackendRoleTag) AllowInstanceMigration() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["allowInstanceMigration"])
}

// The path to the AWS auth backend to
// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
func (r *AuthBackendRoleTag) Backend() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backend"])
}

// If set, only allows a single token to be granted per instance ID.
func (r *AuthBackendRoleTag) DisallowReauthentication() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["disallowReauthentication"])
}

// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
func (r *AuthBackendRoleTag) InstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceId"])
}

// The maximum TTL of the tokens issued using this role.
func (r *AuthBackendRoleTag) MaxTtl() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["maxTtl"])
}

// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
func (r *AuthBackendRoleTag) Policies() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["policies"])
}

// The name of the AWS auth backend role to read
// role tags from, with no leading or trailing `/`s.
func (r *AuthBackendRoleTag) Role() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["role"])
}

// The key of the role tag.
func (r *AuthBackendRoleTag) TagKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["tagKey"])
}

// The value to set the role key.
func (r *AuthBackendRoleTag) TagValue() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["tagValue"])
}

// Input properties used for looking up and filtering AuthBackendRoleTag resources.
type AuthBackendRoleTagState struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration interface{}
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend interface{}
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication interface{}
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId interface{}
	// The maximum TTL of the tokens issued using this role.
	MaxTtl interface{}
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies interface{}
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role interface{}
	// The key of the role tag.
	TagKey interface{}
	// The value to set the role key.
	TagValue interface{}
}

// The set of arguments for constructing a AuthBackendRoleTag resource.
type AuthBackendRoleTagArgs struct {
	// If set, allows migration of the underlying instances where the client resides. Use with caution.
	AllowInstanceMigration interface{}
	// The path to the AWS auth backend to
	// read role tags from, with no leading or trailing `/`s. Defaults to "aws".
	Backend interface{}
	// If set, only allows a single token to be granted per instance ID.
	DisallowReauthentication interface{}
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId interface{}
	// The maximum TTL of the tokens issued using this role.
	MaxTtl interface{}
	// The policies to be associated with the tag. Must be a subset of the policies associated with the role.
	Policies interface{}
	// The name of the AWS auth backend role to read
	// role tags from, with no leading or trailing `/`s.
	Role interface{}
}

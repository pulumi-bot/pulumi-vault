// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package aws

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecretBackend struct {
	pulumi.CustomResourceState

	// The AWS Access Key ID to use when generating new credentials.
	AccessKey pulumi.StringPtrOutput `pulumi:"accessKey"`
	// Default lease duration for secrets in seconds
	DefaultLeaseTtlSeconds pulumi.IntOutput `pulumi:"defaultLeaseTtlSeconds"`
	// Human-friendly description of the mount for the backend.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Maximum possible lease duration for secrets in seconds
	MaxLeaseTtlSeconds pulumi.IntOutput `pulumi:"maxLeaseTtlSeconds"`
	// Path to mount the backend at.
	Path pulumi.StringPtrOutput `pulumi:"path"`
	// The AWS region to make API calls against. Defaults to us-east-1.
	Region pulumi.StringOutput `pulumi:"region"`
	// The AWS Secret Access Key to use when generating new credentials.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
}

// NewSecretBackend registers a new resource with the given unique name, arguments, and options.
func NewSecretBackend(ctx *pulumi.Context,
	name string, args *SecretBackendArgs, opts ...pulumi.ResourceOption) (*SecretBackend, error) {
	if args == nil {
		args = &SecretBackendArgs{}
	}
	var resource SecretBackend
	err := ctx.RegisterResource("vault:aws/secretBackend:SecretBackend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretBackend gets an existing SecretBackend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretBackend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretBackendState, opts ...pulumi.ResourceOption) (*SecretBackend, error) {
	var resource SecretBackend
	err := ctx.ReadResource("vault:aws/secretBackend:SecretBackend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretBackend resources.
type secretBackendState struct {
	// The AWS Access Key ID to use when generating new credentials.
	AccessKey *string `pulumi:"accessKey"`
	// Default lease duration for secrets in seconds
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// Human-friendly description of the mount for the backend.
	Description *string `pulumi:"description"`
	// Maximum possible lease duration for secrets in seconds
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// Path to mount the backend at.
	Path *string `pulumi:"path"`
	// The AWS region to make API calls against. Defaults to us-east-1.
	Region *string `pulumi:"region"`
	// The AWS Secret Access Key to use when generating new credentials.
	SecretKey *string `pulumi:"secretKey"`
}

type SecretBackendState struct {
	// The AWS Access Key ID to use when generating new credentials.
	AccessKey pulumi.StringPtrInput
	// Default lease duration for secrets in seconds
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// Human-friendly description of the mount for the backend.
	Description pulumi.StringPtrInput
	// Maximum possible lease duration for secrets in seconds
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// Path to mount the backend at.
	Path pulumi.StringPtrInput
	// The AWS region to make API calls against. Defaults to us-east-1.
	Region pulumi.StringPtrInput
	// The AWS Secret Access Key to use when generating new credentials.
	SecretKey pulumi.StringPtrInput
}

func (SecretBackendState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendState)(nil)).Elem()
}

type secretBackendArgs struct {
	// The AWS Access Key ID to use when generating new credentials.
	AccessKey *string `pulumi:"accessKey"`
	// Default lease duration for secrets in seconds
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// Human-friendly description of the mount for the backend.
	Description *string `pulumi:"description"`
	// Maximum possible lease duration for secrets in seconds
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// Path to mount the backend at.
	Path *string `pulumi:"path"`
	// The AWS region to make API calls against. Defaults to us-east-1.
	Region *string `pulumi:"region"`
	// The AWS Secret Access Key to use when generating new credentials.
	SecretKey *string `pulumi:"secretKey"`
}

// The set of arguments for constructing a SecretBackend resource.
type SecretBackendArgs struct {
	// The AWS Access Key ID to use when generating new credentials.
	AccessKey pulumi.StringPtrInput
	// Default lease duration for secrets in seconds
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// Human-friendly description of the mount for the backend.
	Description pulumi.StringPtrInput
	// Maximum possible lease duration for secrets in seconds
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// Path to mount the backend at.
	Path pulumi.StringPtrInput
	// The AWS region to make API calls against. Defaults to us-east-1.
	Region pulumi.StringPtrInput
	// The AWS Secret Access Key to use when generating new credentials.
	SecretKey pulumi.StringPtrInput
}

func (SecretBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendArgs)(nil)).Elem()
}


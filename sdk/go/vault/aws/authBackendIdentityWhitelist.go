// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Configures the periodic tidying operation of the whitelisted identity entries.
// 
// For more information, see the
// [Vault docs](https://www.vaultproject.io/api/auth/aws/index.html#configure-identity-whitelist-tidy-operation).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/aws_auth_backend_identity_whitelist.html.markdown.
type AuthBackendIdentityWhitelist struct {
	s *pulumi.ResourceState
}

// NewAuthBackendIdentityWhitelist registers a new resource with the given unique name, arguments, and options.
func NewAuthBackendIdentityWhitelist(ctx *pulumi.Context,
	name string, args *AuthBackendIdentityWhitelistArgs, opts ...pulumi.ResourceOpt) (*AuthBackendIdentityWhitelist, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["backend"] = nil
		inputs["disablePeriodicTidy"] = nil
		inputs["safetyBuffer"] = nil
	} else {
		inputs["backend"] = args.Backend
		inputs["disablePeriodicTidy"] = args.DisablePeriodicTidy
		inputs["safetyBuffer"] = args.SafetyBuffer
	}
	s, err := ctx.RegisterResource("vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AuthBackendIdentityWhitelist{s: s}, nil
}

// GetAuthBackendIdentityWhitelist gets an existing AuthBackendIdentityWhitelist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthBackendIdentityWhitelist(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AuthBackendIdentityWhitelistState, opts ...pulumi.ResourceOpt) (*AuthBackendIdentityWhitelist, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["backend"] = state.Backend
		inputs["disablePeriodicTidy"] = state.DisablePeriodicTidy
		inputs["safetyBuffer"] = state.SafetyBuffer
	}
	s, err := ctx.ReadResource("vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AuthBackendIdentityWhitelist{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AuthBackendIdentityWhitelist) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AuthBackendIdentityWhitelist) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The path of the AWS backend being configured.
func (r *AuthBackendIdentityWhitelist) Backend() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backend"])
}

// If set to true, disables the periodic
// tidying of the identity-whitelist entries.
func (r *AuthBackendIdentityWhitelist) DisablePeriodicTidy() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["disablePeriodicTidy"])
}

// The amount of extra time, in minutes, that must
// have passed beyond the roletag expiration, before it is removed from the
// backend storage.
func (r *AuthBackendIdentityWhitelist) SafetyBuffer() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["safetyBuffer"])
}

// Input properties used for looking up and filtering AuthBackendIdentityWhitelist resources.
type AuthBackendIdentityWhitelistState struct {
	// The path of the AWS backend being configured.
	Backend interface{}
	// If set to true, disables the periodic
	// tidying of the identity-whitelist entries.
	DisablePeriodicTidy interface{}
	// The amount of extra time, in minutes, that must
	// have passed beyond the roletag expiration, before it is removed from the
	// backend storage.
	SafetyBuffer interface{}
}

// The set of arguments for constructing a AuthBackendIdentityWhitelist resource.
type AuthBackendIdentityWhitelistArgs struct {
	// The path of the AWS backend being configured.
	Backend interface{}
	// If set to true, disables the periodic
	// tidying of the identity-whitelist entries.
	DisablePeriodicTidy interface{}
	// The amount of extra time, in minutes, that must
	// have passed beyond the roletag expiration, before it is removed from the
	// backend storage.
	SafetyBuffer interface{}
}

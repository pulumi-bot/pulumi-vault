// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vault

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AuthBackend struct {
	pulumi.CustomResourceState

	// The accessor for this auth method
	Accessor pulumi.StringOutput `pulumi:"accessor"`
	// The default lease duration in seconds.
	DefaultLeaseTtlSeconds pulumi.IntOutput `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Speficies whether to show this mount in the UI-specific listing endpoint.
	ListingVisibility pulumi.StringPtrOutput `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrOutput `pulumi:"local"`
	// The maximum lease duration in seconds.
	MaxLeaseTtlSeconds pulumi.IntOutput `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringOutput `pulumi:"path"`
	// The name of the auth method type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAuthBackend registers a new resource with the given unique name, arguments, and options.
func NewAuthBackend(ctx *pulumi.Context,
	name string, args *AuthBackendArgs, opts ...pulumi.ResourceOption) (*AuthBackend, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &AuthBackendArgs{}
	}
	var resource AuthBackend
	err := ctx.RegisterResource("vault:index/authBackend:AuthBackend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthBackend gets an existing AuthBackend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthBackend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthBackendState, opts ...pulumi.ResourceOption) (*AuthBackend, error) {
	var resource AuthBackend
	err := ctx.ReadResource("vault:index/authBackend:AuthBackend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthBackend resources.
type authBackendState struct {
	// The accessor for this auth method
	Accessor *string `pulumi:"accessor"`
	// The default lease duration in seconds.
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description *string `pulumi:"description"`
	// Speficies whether to show this mount in the UI-specific listing endpoint.
	ListingVisibility *string `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local *bool `pulumi:"local"`
	// The maximum lease duration in seconds.
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path *string `pulumi:"path"`
	// The name of the auth method type
	Type *string `pulumi:"type"`
}

type AuthBackendState struct {
	// The accessor for this auth method
	Accessor pulumi.StringPtrInput
	// The default lease duration in seconds.
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// A description of the auth method
	Description pulumi.StringPtrInput
	// Speficies whether to show this mount in the UI-specific listing endpoint.
	ListingVisibility pulumi.StringPtrInput
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrInput
	// The maximum lease duration in seconds.
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringPtrInput
	// The name of the auth method type
	Type pulumi.StringPtrInput
}

func (AuthBackendState) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendState)(nil)).Elem()
}

type authBackendArgs struct {
	// The default lease duration in seconds.
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description *string `pulumi:"description"`
	// Speficies whether to show this mount in the UI-specific listing endpoint.
	ListingVisibility *string `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local *bool `pulumi:"local"`
	// The maximum lease duration in seconds.
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path *string `pulumi:"path"`
	// The name of the auth method type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AuthBackend resource.
type AuthBackendArgs struct {
	// The default lease duration in seconds.
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// A description of the auth method
	Description pulumi.StringPtrInput
	// Speficies whether to show this mount in the UI-specific listing endpoint.
	ListingVisibility pulumi.StringPtrInput
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrInput
	// The maximum lease duration in seconds.
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringPtrInput
	// The name of the auth method type
	Type pulumi.StringInput
}

func (AuthBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendArgs)(nil)).Elem()
}


// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package database

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecretBackendConnection struct {
	pulumi.CustomResourceState

	// A list of roles that are allowed to use this connection.
	AllowedRoles pulumi.StringArrayOutput `pulumi:"allowedRoles"`
	// Unique name of the Vault mount to configure.
	Backend pulumi.StringOutput `pulumi:"backend"`
	// Connection parameters for the cassandra-database-plugin plugin.
	Cassandra SecretBackendConnectionCassandraPtrOutput `pulumi:"cassandra"`
	// A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
	Data pulumi.MapOutput `pulumi:"data"`
	// Connection parameters for the hana-database-plugin plugin.
	Hana SecretBackendConnectionHanaPtrOutput `pulumi:"hana"`
	// Connection parameters for the mongodb-database-plugin plugin.
	Mongodb SecretBackendConnectionMongodbPtrOutput `pulumi:"mongodb"`
	// Connection parameters for the mssql-database-plugin plugin.
	Mssql SecretBackendConnectionMssqlPtrOutput `pulumi:"mssql"`
	// Connection parameters for the mysql-database-plugin plugin.
	Mysql SecretBackendConnectionMysqlPtrOutput `pulumi:"mysql"`
	// Connection parameters for the mysql-aurora-database-plugin plugin.
	MysqlAurora SecretBackendConnectionMysqlAuroraPtrOutput `pulumi:"mysqlAurora"`
	// Connection parameters for the mysql-legacy-database-plugin plugin.
	MysqlLegacy SecretBackendConnectionMysqlLegacyPtrOutput `pulumi:"mysqlLegacy"`
	// Connection parameters for the mysql-rds-database-plugin plugin.
	MysqlRds SecretBackendConnectionMysqlRdsPtrOutput `pulumi:"mysqlRds"`
	// Name of the database connection.
	Name pulumi.StringOutput `pulumi:"name"`
	// Connection parameters for the oracle-database-plugin plugin.
	Oracle SecretBackendConnectionOraclePtrOutput `pulumi:"oracle"`
	// Connection parameters for the postgresql-database-plugin plugin.
	Postgresql SecretBackendConnectionPostgresqlPtrOutput `pulumi:"postgresql"`
	// A list of database statements to be executed to rotate the root user's credentials.
	RootRotationStatements pulumi.StringArrayOutput `pulumi:"rootRotationStatements"`
	// Specifies if the connection is verified during initial configuration.
	VerifyConnection pulumi.BoolPtrOutput `pulumi:"verifyConnection"`
}

// NewSecretBackendConnection registers a new resource with the given unique name, arguments, and options.
func NewSecretBackendConnection(ctx *pulumi.Context,
	name string, args *SecretBackendConnectionArgs, opts ...pulumi.ResourceOption) (*SecretBackendConnection, error) {
	if args == nil || args.Backend == nil {
		return nil, errors.New("missing required argument 'Backend'")
	}
	if args == nil {
		args = &SecretBackendConnectionArgs{}
	}
	var resource SecretBackendConnection
	err := ctx.RegisterResource("vault:database/secretBackendConnection:SecretBackendConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretBackendConnection gets an existing SecretBackendConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretBackendConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretBackendConnectionState, opts ...pulumi.ResourceOption) (*SecretBackendConnection, error) {
	var resource SecretBackendConnection
	err := ctx.ReadResource("vault:database/secretBackendConnection:SecretBackendConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretBackendConnection resources.
type secretBackendConnectionState struct {
	// A list of roles that are allowed to use this connection.
	AllowedRoles []string `pulumi:"allowedRoles"`
	// Unique name of the Vault mount to configure.
	Backend *string `pulumi:"backend"`
	// Connection parameters for the cassandra-database-plugin plugin.
	Cassandra *SecretBackendConnectionCassandra `pulumi:"cassandra"`
	// A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
	Data map[string]interface{} `pulumi:"data"`
	// Connection parameters for the hana-database-plugin plugin.
	Hana *SecretBackendConnectionHana `pulumi:"hana"`
	// Connection parameters for the mongodb-database-plugin plugin.
	Mongodb *SecretBackendConnectionMongodb `pulumi:"mongodb"`
	// Connection parameters for the mssql-database-plugin plugin.
	Mssql *SecretBackendConnectionMssql `pulumi:"mssql"`
	// Connection parameters for the mysql-database-plugin plugin.
	Mysql *SecretBackendConnectionMysql `pulumi:"mysql"`
	// Connection parameters for the mysql-aurora-database-plugin plugin.
	MysqlAurora *SecretBackendConnectionMysqlAurora `pulumi:"mysqlAurora"`
	// Connection parameters for the mysql-legacy-database-plugin plugin.
	MysqlLegacy *SecretBackendConnectionMysqlLegacy `pulumi:"mysqlLegacy"`
	// Connection parameters for the mysql-rds-database-plugin plugin.
	MysqlRds *SecretBackendConnectionMysqlRds `pulumi:"mysqlRds"`
	// Name of the database connection.
	Name *string `pulumi:"name"`
	// Connection parameters for the oracle-database-plugin plugin.
	Oracle *SecretBackendConnectionOracle `pulumi:"oracle"`
	// Connection parameters for the postgresql-database-plugin plugin.
	Postgresql *SecretBackendConnectionPostgresql `pulumi:"postgresql"`
	// A list of database statements to be executed to rotate the root user's credentials.
	RootRotationStatements []string `pulumi:"rootRotationStatements"`
	// Specifies if the connection is verified during initial configuration.
	VerifyConnection *bool `pulumi:"verifyConnection"`
}

type SecretBackendConnectionState struct {
	// A list of roles that are allowed to use this connection.
	AllowedRoles pulumi.StringArrayInput
	// Unique name of the Vault mount to configure.
	Backend pulumi.StringPtrInput
	// Connection parameters for the cassandra-database-plugin plugin.
	Cassandra SecretBackendConnectionCassandraPtrInput
	// A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
	Data pulumi.MapInput
	// Connection parameters for the hana-database-plugin plugin.
	Hana SecretBackendConnectionHanaPtrInput
	// Connection parameters for the mongodb-database-plugin plugin.
	Mongodb SecretBackendConnectionMongodbPtrInput
	// Connection parameters for the mssql-database-plugin plugin.
	Mssql SecretBackendConnectionMssqlPtrInput
	// Connection parameters for the mysql-database-plugin plugin.
	Mysql SecretBackendConnectionMysqlPtrInput
	// Connection parameters for the mysql-aurora-database-plugin plugin.
	MysqlAurora SecretBackendConnectionMysqlAuroraPtrInput
	// Connection parameters for the mysql-legacy-database-plugin plugin.
	MysqlLegacy SecretBackendConnectionMysqlLegacyPtrInput
	// Connection parameters for the mysql-rds-database-plugin plugin.
	MysqlRds SecretBackendConnectionMysqlRdsPtrInput
	// Name of the database connection.
	Name pulumi.StringPtrInput
	// Connection parameters for the oracle-database-plugin plugin.
	Oracle SecretBackendConnectionOraclePtrInput
	// Connection parameters for the postgresql-database-plugin plugin.
	Postgresql SecretBackendConnectionPostgresqlPtrInput
	// A list of database statements to be executed to rotate the root user's credentials.
	RootRotationStatements pulumi.StringArrayInput
	// Specifies if the connection is verified during initial configuration.
	VerifyConnection pulumi.BoolPtrInput
}

func (SecretBackendConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendConnectionState)(nil)).Elem()
}

type secretBackendConnectionArgs struct {
	// A list of roles that are allowed to use this connection.
	AllowedRoles []string `pulumi:"allowedRoles"`
	// Unique name of the Vault mount to configure.
	Backend string `pulumi:"backend"`
	// Connection parameters for the cassandra-database-plugin plugin.
	Cassandra *SecretBackendConnectionCassandra `pulumi:"cassandra"`
	// A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
	Data map[string]interface{} `pulumi:"data"`
	// Connection parameters for the hana-database-plugin plugin.
	Hana *SecretBackendConnectionHana `pulumi:"hana"`
	// Connection parameters for the mongodb-database-plugin plugin.
	Mongodb *SecretBackendConnectionMongodb `pulumi:"mongodb"`
	// Connection parameters for the mssql-database-plugin plugin.
	Mssql *SecretBackendConnectionMssql `pulumi:"mssql"`
	// Connection parameters for the mysql-database-plugin plugin.
	Mysql *SecretBackendConnectionMysql `pulumi:"mysql"`
	// Connection parameters for the mysql-aurora-database-plugin plugin.
	MysqlAurora *SecretBackendConnectionMysqlAurora `pulumi:"mysqlAurora"`
	// Connection parameters for the mysql-legacy-database-plugin plugin.
	MysqlLegacy *SecretBackendConnectionMysqlLegacy `pulumi:"mysqlLegacy"`
	// Connection parameters for the mysql-rds-database-plugin plugin.
	MysqlRds *SecretBackendConnectionMysqlRds `pulumi:"mysqlRds"`
	// Name of the database connection.
	Name *string `pulumi:"name"`
	// Connection parameters for the oracle-database-plugin plugin.
	Oracle *SecretBackendConnectionOracle `pulumi:"oracle"`
	// Connection parameters for the postgresql-database-plugin plugin.
	Postgresql *SecretBackendConnectionPostgresql `pulumi:"postgresql"`
	// A list of database statements to be executed to rotate the root user's credentials.
	RootRotationStatements []string `pulumi:"rootRotationStatements"`
	// Specifies if the connection is verified during initial configuration.
	VerifyConnection *bool `pulumi:"verifyConnection"`
}

// The set of arguments for constructing a SecretBackendConnection resource.
type SecretBackendConnectionArgs struct {
	// A list of roles that are allowed to use this connection.
	AllowedRoles pulumi.StringArrayInput
	// Unique name of the Vault mount to configure.
	Backend pulumi.StringInput
	// Connection parameters for the cassandra-database-plugin plugin.
	Cassandra SecretBackendConnectionCassandraPtrInput
	// A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
	Data pulumi.MapInput
	// Connection parameters for the hana-database-plugin plugin.
	Hana SecretBackendConnectionHanaPtrInput
	// Connection parameters for the mongodb-database-plugin plugin.
	Mongodb SecretBackendConnectionMongodbPtrInput
	// Connection parameters for the mssql-database-plugin plugin.
	Mssql SecretBackendConnectionMssqlPtrInput
	// Connection parameters for the mysql-database-plugin plugin.
	Mysql SecretBackendConnectionMysqlPtrInput
	// Connection parameters for the mysql-aurora-database-plugin plugin.
	MysqlAurora SecretBackendConnectionMysqlAuroraPtrInput
	// Connection parameters for the mysql-legacy-database-plugin plugin.
	MysqlLegacy SecretBackendConnectionMysqlLegacyPtrInput
	// Connection parameters for the mysql-rds-database-plugin plugin.
	MysqlRds SecretBackendConnectionMysqlRdsPtrInput
	// Name of the database connection.
	Name pulumi.StringPtrInput
	// Connection parameters for the oracle-database-plugin plugin.
	Oracle SecretBackendConnectionOraclePtrInput
	// Connection parameters for the postgresql-database-plugin plugin.
	Postgresql SecretBackendConnectionPostgresqlPtrInput
	// A list of database statements to be executed to rotate the root user's credentials.
	RootRotationStatements pulumi.StringArrayInput
	// Specifies if the connection is verified during initial configuration.
	VerifyConnection pulumi.BoolPtrInput
}

func (SecretBackendConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretBackendConnectionArgs)(nil)).Elem()
}


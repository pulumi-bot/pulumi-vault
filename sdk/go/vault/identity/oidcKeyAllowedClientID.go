// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/identity_oidc_key_allowed_client_id.html.markdown.
type OidcKeyAllowedClientID struct {
	s *pulumi.ResourceState
}

// NewOidcKeyAllowedClientID registers a new resource with the given unique name, arguments, and options.
func NewOidcKeyAllowedClientID(ctx *pulumi.Context,
	name string, args *OidcKeyAllowedClientIDArgs, opts ...pulumi.ResourceOpt) (*OidcKeyAllowedClientID, error) {
	if args == nil || args.AllowedClientId == nil {
		return nil, errors.New("missing required argument 'AllowedClientId'")
	}
	if args == nil || args.KeyName == nil {
		return nil, errors.New("missing required argument 'KeyName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allowedClientId"] = nil
		inputs["keyName"] = nil
	} else {
		inputs["allowedClientId"] = args.AllowedClientId
		inputs["keyName"] = args.KeyName
	}
	s, err := ctx.RegisterResource("vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OidcKeyAllowedClientID{s: s}, nil
}

// GetOidcKeyAllowedClientID gets an existing OidcKeyAllowedClientID resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOidcKeyAllowedClientID(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OidcKeyAllowedClientIDState, opts ...pulumi.ResourceOpt) (*OidcKeyAllowedClientID, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["allowedClientId"] = state.AllowedClientId
		inputs["keyName"] = state.KeyName
	}
	s, err := ctx.ReadResource("vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OidcKeyAllowedClientID{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *OidcKeyAllowedClientID) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *OidcKeyAllowedClientID) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Client ID to allow usage with the OIDC named key
func (r *OidcKeyAllowedClientID) AllowedClientId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["allowedClientId"])
}

// Name of the OIDC Key allow the Client ID.
func (r *OidcKeyAllowedClientID) KeyName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["keyName"])
}

// Input properties used for looking up and filtering OidcKeyAllowedClientID resources.
type OidcKeyAllowedClientIDState struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId interface{}
	// Name of the OIDC Key allow the Client ID.
	KeyName interface{}
}

// The set of arguments for constructing a OidcKeyAllowedClientID resource.
type OidcKeyAllowedClientIDArgs struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId interface{}
	// Name of the OIDC Key allow the Client ID.
	KeyName interface{}
}

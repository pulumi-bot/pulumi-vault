// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pkiSecret

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Allows setting the issuing certificate endpoints, CRL distribution points, and OCSP server endpoints that will be encoded into issued certificates.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/r/pki_secret_backend_config_urls.html.markdown.
type SecretBackendConfigUrls struct {
	s *pulumi.ResourceState
}

// NewSecretBackendConfigUrls registers a new resource with the given unique name, arguments, and options.
func NewSecretBackendConfigUrls(ctx *pulumi.Context,
	name string, args *SecretBackendConfigUrlsArgs, opts ...pulumi.ResourceOpt) (*SecretBackendConfigUrls, error) {
	if args == nil || args.Backend == nil {
		return nil, errors.New("missing required argument 'Backend'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["backend"] = nil
		inputs["crlDistributionPoints"] = nil
		inputs["issuingCertificates"] = nil
		inputs["ocspServers"] = nil
	} else {
		inputs["backend"] = args.Backend
		inputs["crlDistributionPoints"] = args.CrlDistributionPoints
		inputs["issuingCertificates"] = args.IssuingCertificates
		inputs["ocspServers"] = args.OcspServers
	}
	s, err := ctx.RegisterResource("vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SecretBackendConfigUrls{s: s}, nil
}

// GetSecretBackendConfigUrls gets an existing SecretBackendConfigUrls resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretBackendConfigUrls(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SecretBackendConfigUrlsState, opts ...pulumi.ResourceOpt) (*SecretBackendConfigUrls, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["backend"] = state.Backend
		inputs["crlDistributionPoints"] = state.CrlDistributionPoints
		inputs["issuingCertificates"] = state.IssuingCertificates
		inputs["ocspServers"] = state.OcspServers
	}
	s, err := ctx.ReadResource("vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SecretBackendConfigUrls{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SecretBackendConfigUrls) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SecretBackendConfigUrls) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
func (r *SecretBackendConfigUrls) Backend() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backend"])
}

// Specifies the URL values for the CRL Distribution Points field.
func (r *SecretBackendConfigUrls) CrlDistributionPoints() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["crlDistributionPoints"])
}

// Specifies the URL values for the Issuing Certificate field.
func (r *SecretBackendConfigUrls) IssuingCertificates() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["issuingCertificates"])
}

// Specifies the URL values for the OCSP Servers field.
func (r *SecretBackendConfigUrls) OcspServers() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["ocspServers"])
}

// Input properties used for looking up and filtering SecretBackendConfigUrls resources.
type SecretBackendConfigUrlsState struct {
	// The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
	Backend interface{}
	// Specifies the URL values for the CRL Distribution Points field.
	CrlDistributionPoints interface{}
	// Specifies the URL values for the Issuing Certificate field.
	IssuingCertificates interface{}
	// Specifies the URL values for the OCSP Servers field.
	OcspServers interface{}
}

// The set of arguments for constructing a SecretBackendConfigUrls resource.
type SecretBackendConfigUrlsArgs struct {
	// The path the PKI secret backend is mounted at, with no leading or trailing `/`s.
	Backend interface{}
	// Specifies the URL values for the CRL Distribution Points field.
	CrlDistributionPoints interface{}
	// Specifies the URL values for the Issuing Certificate field.
	IssuingCertificates interface{}
	// Specifies the URL values for the OCSP Servers field.
	OcspServers interface{}
}

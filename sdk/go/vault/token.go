// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vault

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Token struct {
	pulumi.CustomResourceState

	// The client token.
	ClientToken pulumi.StringOutput `pulumi:"clientToken"`
	// The display name of the token.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The explicit max TTL of the token.
	ExplicitMaxTtl pulumi.StringPtrOutput `pulumi:"explicitMaxTtl"`
	// The token lease duration.
	LeaseDuration pulumi.IntOutput `pulumi:"leaseDuration"`
	// The token lease started on.
	LeaseStarted pulumi.StringOutput `pulumi:"leaseStarted"`
	// Flag to disable the default policy.
	NoDefaultPolicy pulumi.BoolPtrOutput `pulumi:"noDefaultPolicy"`
	// Flag to create a token without parent.
	NoParent pulumi.BoolOutput `pulumi:"noParent"`
	// The number of allowed uses of the token.
	NumUses pulumi.IntOutput `pulumi:"numUses"`
	// The period of the token.
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// List of policies.
	Policies pulumi.StringArrayOutput `pulumi:"policies"`
	// The renew increment.
	RenewIncrement pulumi.IntPtrOutput `pulumi:"renewIncrement"`
	// The minimum lease to renew token.
	RenewMinLease pulumi.IntPtrOutput `pulumi:"renewMinLease"`
	// Flag to allow the token to be renewed
	Renewable pulumi.BoolOutput `pulumi:"renewable"`
	// The token role name.
	RoleName pulumi.StringPtrOutput `pulumi:"roleName"`
	// The TTL period of the token.
	Ttl pulumi.StringPtrOutput `pulumi:"ttl"`
	// The client wrapped token.
	WrappedToken pulumi.StringOutput `pulumi:"wrappedToken"`
	// The client wrapping accessor.
	WrappingAccessor pulumi.StringOutput `pulumi:"wrappingAccessor"`
	// The TTL period of the wrapped token.
	WrappingTtl pulumi.StringPtrOutput `pulumi:"wrappingTtl"`
}

// NewToken registers a new resource with the given unique name, arguments, and options.
func NewToken(ctx *pulumi.Context,
	name string, args *TokenArgs, opts ...pulumi.ResourceOption) (*Token, error) {
	if args == nil {
		args = &TokenArgs{}
	}
	var resource Token
	err := ctx.RegisterResource("vault:index/token:Token", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetToken gets an existing Token resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TokenState, opts ...pulumi.ResourceOption) (*Token, error) {
	var resource Token
	err := ctx.ReadResource("vault:index/token:Token", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Token resources.
type tokenState struct {
	// The client token.
	ClientToken *string `pulumi:"clientToken"`
	// The display name of the token.
	DisplayName *string `pulumi:"displayName"`
	// The explicit max TTL of the token.
	ExplicitMaxTtl *string `pulumi:"explicitMaxTtl"`
	// The token lease duration.
	LeaseDuration *int `pulumi:"leaseDuration"`
	// The token lease started on.
	LeaseStarted *string `pulumi:"leaseStarted"`
	// Flag to disable the default policy.
	NoDefaultPolicy *bool `pulumi:"noDefaultPolicy"`
	// Flag to create a token without parent.
	NoParent *bool `pulumi:"noParent"`
	// The number of allowed uses of the token.
	NumUses *int `pulumi:"numUses"`
	// The period of the token.
	Period *string `pulumi:"period"`
	// List of policies.
	Policies []string `pulumi:"policies"`
	// The renew increment.
	RenewIncrement *int `pulumi:"renewIncrement"`
	// The minimum lease to renew token.
	RenewMinLease *int `pulumi:"renewMinLease"`
	// Flag to allow the token to be renewed
	Renewable *bool `pulumi:"renewable"`
	// The token role name.
	RoleName *string `pulumi:"roleName"`
	// The TTL period of the token.
	Ttl *string `pulumi:"ttl"`
	// The client wrapped token.
	WrappedToken *string `pulumi:"wrappedToken"`
	// The client wrapping accessor.
	WrappingAccessor *string `pulumi:"wrappingAccessor"`
	// The TTL period of the wrapped token.
	WrappingTtl *string `pulumi:"wrappingTtl"`
}

type TokenState struct {
	// The client token.
	ClientToken pulumi.StringPtrInput
	// The display name of the token.
	DisplayName pulumi.StringPtrInput
	// The explicit max TTL of the token.
	ExplicitMaxTtl pulumi.StringPtrInput
	// The token lease duration.
	LeaseDuration pulumi.IntPtrInput
	// The token lease started on.
	LeaseStarted pulumi.StringPtrInput
	// Flag to disable the default policy.
	NoDefaultPolicy pulumi.BoolPtrInput
	// Flag to create a token without parent.
	NoParent pulumi.BoolPtrInput
	// The number of allowed uses of the token.
	NumUses pulumi.IntPtrInput
	// The period of the token.
	Period pulumi.StringPtrInput
	// List of policies.
	Policies pulumi.StringArrayInput
	// The renew increment.
	RenewIncrement pulumi.IntPtrInput
	// The minimum lease to renew token.
	RenewMinLease pulumi.IntPtrInput
	// Flag to allow the token to be renewed
	Renewable pulumi.BoolPtrInput
	// The token role name.
	RoleName pulumi.StringPtrInput
	// The TTL period of the token.
	Ttl pulumi.StringPtrInput
	// The client wrapped token.
	WrappedToken pulumi.StringPtrInput
	// The client wrapping accessor.
	WrappingAccessor pulumi.StringPtrInput
	// The TTL period of the wrapped token.
	WrappingTtl pulumi.StringPtrInput
}

func (TokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*tokenState)(nil)).Elem()
}

type tokenArgs struct {
	// The display name of the token.
	DisplayName *string `pulumi:"displayName"`
	// The explicit max TTL of the token.
	ExplicitMaxTtl *string `pulumi:"explicitMaxTtl"`
	// Flag to disable the default policy.
	NoDefaultPolicy *bool `pulumi:"noDefaultPolicy"`
	// Flag to create a token without parent.
	NoParent *bool `pulumi:"noParent"`
	// The number of allowed uses of the token.
	NumUses *int `pulumi:"numUses"`
	// The period of the token.
	Period *string `pulumi:"period"`
	// List of policies.
	Policies []string `pulumi:"policies"`
	// The renew increment.
	RenewIncrement *int `pulumi:"renewIncrement"`
	// The minimum lease to renew token.
	RenewMinLease *int `pulumi:"renewMinLease"`
	// Flag to allow the token to be renewed
	Renewable *bool `pulumi:"renewable"`
	// The token role name.
	RoleName *string `pulumi:"roleName"`
	// The TTL period of the token.
	Ttl *string `pulumi:"ttl"`
	// The TTL period of the wrapped token.
	WrappingTtl *string `pulumi:"wrappingTtl"`
}

// The set of arguments for constructing a Token resource.
type TokenArgs struct {
	// The display name of the token.
	DisplayName pulumi.StringPtrInput
	// The explicit max TTL of the token.
	ExplicitMaxTtl pulumi.StringPtrInput
	// Flag to disable the default policy.
	NoDefaultPolicy pulumi.BoolPtrInput
	// Flag to create a token without parent.
	NoParent pulumi.BoolPtrInput
	// The number of allowed uses of the token.
	NumUses pulumi.IntPtrInput
	// The period of the token.
	Period pulumi.StringPtrInput
	// List of policies.
	Policies pulumi.StringArrayInput
	// The renew increment.
	RenewIncrement pulumi.IntPtrInput
	// The minimum lease to renew token.
	RenewMinLease pulumi.IntPtrInput
	// Flag to allow the token to be renewed
	Renewable pulumi.BoolPtrInput
	// The token role name.
	RoleName pulumi.StringPtrInput
	// The TTL period of the token.
	Ttl pulumi.StringPtrInput
	// The TTL period of the wrapped token.
	WrappingTtl pulumi.StringPtrInput
}

func (TokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tokenArgs)(nil)).Elem()
}


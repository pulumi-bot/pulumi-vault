// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Generic
{
    public static partial class Invokes
    {
        public static Task<GetSecretResult> GetSecret(GetSecretArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("vault:generic/getSecret:getSecret", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetSecretArgs : Pulumi.InvokeArgs
    {
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        [Input("version")]
        public int? Version { get; set; }

        public GetSecretArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly ImmutableDictionary<string, object> Data;
        public readonly string DataJson;
        public readonly int LeaseDuration;
        public readonly string LeaseId;
        public readonly bool LeaseRenewable;
        public readonly string LeaseStartTime;
        public readonly string Path;
        public readonly int? Version;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetSecretResult(
            ImmutableDictionary<string, object> data,
            string dataJson,
            int leaseDuration,
            string leaseId,
            bool leaseRenewable,
            string leaseStartTime,
            string path,
            int? version,
            string id)
        {
            Data = data;
            DataJson = dataJson;
            LeaseDuration = leaseDuration;
            LeaseId = leaseId;
            LeaseRenewable = leaseRenewable;
            LeaseStartTime = leaseStartTime;
            Path = path;
            Version = version;
            Id = id;
        }
    }
}

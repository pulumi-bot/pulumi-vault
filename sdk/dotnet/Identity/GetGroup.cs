// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Identity
{
    public static partial class Invokes
    {
        public static Task<GetGroupResult> GetGroup(GetGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("vault:identity/getGroup:getGroup", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetGroupArgs : Pulumi.InvokeArgs
    {
        [Input("aliasId")]
        public string? AliasId { get; set; }

        [Input("aliasMountAccessor")]
        public string? AliasMountAccessor { get; set; }

        [Input("aliasName")]
        public string? AliasName { get; set; }

        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("groupName")]
        public string? GroupName { get; set; }

        public GetGroupArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetGroupResult
    {
        public readonly string AliasCanonicalId;
        public readonly string AliasCreationTime;
        public readonly string AliasId;
        public readonly string AliasLastUpdateTime;
        public readonly ImmutableArray<string> AliasMergedFromCanonicalIds;
        public readonly ImmutableDictionary<string, object> AliasMetadata;
        public readonly string AliasMountAccessor;
        public readonly string AliasMountPath;
        public readonly string AliasMountType;
        public readonly string AliasName;
        public readonly string CreationTime;
        public readonly string DataJson;
        public readonly string GroupId;
        public readonly string GroupName;
        public readonly string LastUpdateTime;
        public readonly ImmutableArray<string> MemberEntityIds;
        public readonly ImmutableArray<string> MemberGroupIds;
        public readonly ImmutableDictionary<string, object> Metadata;
        public readonly int ModifyIndex;
        public readonly string NamespaceId;
        public readonly ImmutableArray<string> ParentGroupIds;
        public readonly ImmutableArray<string> Policies;
        public readonly string Type;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetGroupResult(
            string aliasCanonicalId,
            string aliasCreationTime,
            string aliasId,
            string aliasLastUpdateTime,
            ImmutableArray<string> aliasMergedFromCanonicalIds,
            ImmutableDictionary<string, object> aliasMetadata,
            string aliasMountAccessor,
            string aliasMountPath,
            string aliasMountType,
            string aliasName,
            string creationTime,
            string dataJson,
            string groupId,
            string groupName,
            string lastUpdateTime,
            ImmutableArray<string> memberEntityIds,
            ImmutableArray<string> memberGroupIds,
            ImmutableDictionary<string, object> metadata,
            int modifyIndex,
            string namespaceId,
            ImmutableArray<string> parentGroupIds,
            ImmutableArray<string> policies,
            string type,
            string id)
        {
            AliasCanonicalId = aliasCanonicalId;
            AliasCreationTime = aliasCreationTime;
            AliasId = aliasId;
            AliasLastUpdateTime = aliasLastUpdateTime;
            AliasMergedFromCanonicalIds = aliasMergedFromCanonicalIds;
            AliasMetadata = aliasMetadata;
            AliasMountAccessor = aliasMountAccessor;
            AliasMountPath = aliasMountPath;
            AliasMountType = aliasMountType;
            AliasName = aliasName;
            CreationTime = creationTime;
            DataJson = dataJson;
            GroupId = groupId;
            GroupName = groupName;
            LastUpdateTime = lastUpdateTime;
            MemberEntityIds = memberEntityIds;
            MemberGroupIds = memberGroupIds;
            Metadata = metadata;
            ModifyIndex = modifyIndex;
            NamespaceId = namespaceId;
            ParentGroupIds = parentGroupIds;
            Policies = policies;
            Type = type;
            Id = id;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vault.Aws
{
    public static partial class Invokes
    {
        public static Task<GetAccessCredentialsResult> GetAccessCredentials(GetAccessCredentialsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccessCredentialsResult>("vault:aws/getAccessCredentials:getAccessCredentials", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetAccessCredentialsArgs : Pulumi.InvokeArgs
    {
        [Input("backend", required: true)]
        public string Backend { get; set; } = null!;

        [Input("role", required: true)]
        public string Role { get; set; } = null!;

        [Input("roleArn")]
        public string? RoleArn { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetAccessCredentialsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAccessCredentialsResult
    {
        public readonly string AccessKey;
        public readonly string Backend;
        public readonly int LeaseDuration;
        public readonly string LeaseId;
        public readonly bool LeaseRenewable;
        public readonly string LeaseStartTime;
        public readonly string Role;
        public readonly string? RoleArn;
        public readonly string SecretKey;
        public readonly string SecurityToken;
        public readonly string? Type;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccessCredentialsResult(
            string accessKey,
            string backend,
            int leaseDuration,
            string leaseId,
            bool leaseRenewable,
            string leaseStartTime,
            string role,
            string? roleArn,
            string secretKey,
            string securityToken,
            string? type,
            string id)
        {
            AccessKey = accessKey;
            Backend = backend;
            LeaseDuration = leaseDuration;
            LeaseId = leaseId;
            LeaseRenewable = leaseRenewable;
            LeaseStartTime = leaseStartTime;
            Role = role;
            RoleArn = roleArn;
            SecretKey = secretKey;
            SecurityToken = securityToken;
            Type = type;
            Id = id;
        }
    }
}
